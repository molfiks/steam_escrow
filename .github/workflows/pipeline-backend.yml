name: steamescrow Backend API Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - angular-network/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd angular-network
          chmod +x ./mvnw
          ./mvnw clean compile
          


#  unit-tests:
#    runs-on: self-hosted
#    name: Unit tests
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Setup Java
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#          distribution: 'corretto'
#
#      - name: Running unit tests
#        run: |
#          cd angular-network
#          chmod +x ./mvnw
#          ./mvnw clean test
          

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile,unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          cd angular-network
          chmod +x ./mvnw
          ./mvnw clean package
          

  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Build project
        run: |
          cd angular-network
          chmod +x ./mvnw
          ./mvnw clean package
      - name: Extract project version
        id: extract_version
        run: |
          cd angular-network
          chmod +x ./mvnw
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: angular-network
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/steamescrow-ui:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/steamescrow-ui:latest

            

  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh ${{ secrets.AMAZON_AWS_EC2_USERNAME }}@${{ secrets.AMAZON_AWS_EC2_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose.yml ${{ secrets.AMAZON_AWS_EC2_USERNAME }}@${{ secrets.AMAZON_AWS_EC2_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.AMAZON_AWS_EC2_USERNAME }}@${{ secrets.AMAZON_AWS_EC2_IP }}<<EOF
          export EMAIL_HOST_NAME=${{secrets.EMAIL_HOST_NAME}}
          export EMAIL_USER_NAME=${{secrets.EMAIL_USER_NAME}}
          export EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}}
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF